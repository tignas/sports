{% extends "templates/fantasy/base.jinja2" %}
{% block extra_head %}
<script type="text/javascript" src="/static/vendor/datatables/dataTables.js"></script>
<script src="/static/vendor/d3.min.js" type="text/javascript"></script>
<script src="/static/vendor/nvd3/nv.d3.min.js" type="text/javascript"></script>
<script src="/static/vendor/tipsy/src/javascripts/jquery.tipsy.js" type="text/javascript"></script>
{% endblock %}
{% block fantasy_content %}
<div id="options">
{% include "templates/widgets/game_type_picker.jinja2" %}
{% include "templates/widgets/season_picker.jinja2" %}
{% include "templates/widgets/fantasy/scoring.jinja2" %}
</div>
<div id="chart">
<h3>Positions</h3>
{% for position in positions %}
<label for="{{position}}">{{position}}</label>
<input id="{{position}}" value="{{position}}" name="positions[]" type="checkbox" checked="true"/>
{% endfor %}
<h3>Variables</h3>
</select>
{% for var in ['x', 'y', 'z'] %}
    <label for="{{var}}">{{var}}</label>
    <select id="{{var}}" name="{{var}}" class='variable'>
    {% for cat, keys in scoring.iteritems() %}
        {% if cat == 'offense' %}
            {% for c, v in keys.iteritems() %}
                <option value="{{c}}_{{v}}">{{c}}_{{v}}"</option>
            {% endfor %}
        {% else %}
        {% for key in keys %}
            <option value="{{cat}}_{{key}}">{{cat}}_{{key}}</option>
        {% endfor %}
        {% endif %}
    {% endfor %}
        <option value="fantasy_points">fantasy_points</option>
    </select>
{% endfor %}
</div>
{% endblock %}
{% block javascript %}
<script>
$(document).ready(function () {

var player_data = {{json_players|safe}};

var data = player_data;

var height = 500;
var width = 750;
var padding = 50;
var variables = {
    'x': 'receiving_yards',
    'y': 'receiving_touchdowns',
    'z': 'fantasy_points',
}

var sets = {}

$.each(variables, function(k, v) {
    sets[k] = player_data.map(function(d) {
        return d[v];
    });
});

$('.variable').on('change', function () {
    var variable = $(this).attr('id');
    variables[variable] = $(this).val();
    draw_graph(data, variables, height, width, padding);
});

$('input[name="positions[]"]').on('change', function () {
    var pos = [];
    $('input[name="positions[]"]:checked').each(function () {
        pos.push($(this).val());
    });
    console.log(pos);
    data = player_data.filter(function(d) {
        if (pos.indexOf(d['player']['position']) > -1) {
            return d;
        };
    });
    draw_graph(data, variables, height, width, padding);
    
});

var draw_graph = function(data, variables, height, width, padding) {
    var x_var = variables['x'];
    var y_var = variables['y'];
    var z_var = variables['z'];
    var max_x = d3.max(data, function(datum) {
        return datum[x_var];
    });
    var max_y = d3.max(data, function(datum) {
        return datum[y_var];
    });
    var colorScale = d3.scale.ordinal()
                       .domain(['qb', 'rb', 'wr', 'te'])
                       .range(['blue', 'red', 'green', 'black'])
    var xScale = d3.scale.linear()
                .domain([0, max_x])
                .range([padding, width - padding]);
    var yScale = d3.scale.linear()
                .domain([0, max_y])
                .range([height-padding, padding]);
    var xAxis = d3.svg.axis()
                    .scale(xScale)
                    .orient('bottom');
    var yAxis = d3.svg.axis()
                    .scale(yScale)
                    .orient('left');
    d3.select('#chart svg').remove();
    var scatter = d3.select('#chart')
                    .append('svg')
                    .attr('width', width)
                    .attr('height', height);
    scatter.append('g')
            .attr('class', 'axis')
            .attr("transform", "translate(0," + (height - padding) + ")")
            .call(xAxis);
    scatter.append("g")
            .attr("class", "axis")
            .attr("transform", "translate(" + padding + ",0)")
            .call(yAxis);
    scatter.selectAll('circle')
           .data(data)
           .enter()
           .append('circle')
           .attr('cx', function (d) {
                return xScale(d[x_var]);
           })
           .attr('cy', function (d) {
                return yScale(d[y_var]);
           })
           .attr('r', function (d) {
            return Math.sqrt(d[z_var])/2;
           })
           .attr('fill', function(d){
                return colorScale(d['player']['position']);
           })
           .append('title')
           .attr('class', 'tipsy')
           .text(function(d) {
                return d['player']['name'];
           });
};
draw_graph(data, variables, height, width, padding);


});
</script>
{% endblock %}
